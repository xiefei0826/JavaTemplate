server:
  port: 9092


spring:
  datasource:
    url: jdbc:mysql://192.168.1.131:3306/Test?serverTimezone=UTC&characterEncoding=utf-8
    username: root
    password: example2020!@#
    driver-class-name: com.mysql.cj.jdbc.Driver
    dbcp2:
      max-idle: 10
      max-total: 50
      max-wait-millis: 10000
      initial-size: 5
      default-transaction-isolation: 2
      validation-query: select 1
      test-while-idle: true
    type: org.apache.commons.dbcp2.BasicDataSource


  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  database-platform: org.hibernate.dialect.MySQLDialect
  redis:
    host: 192.168.1.131
    port: 6379
    jedis:
      pool:
        max-idle: 10
        max-wait: 2000
        max-active: 10
    database: 0
    timeout: 1000
    password: example2020!@#
  jackson:
    time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: true
    date-format: yyyy-MM-dd HH:mm:ss
  cache:
    type: redis
  data:
    mongodb:
      host: 192.168.1.131
      username: root
      password: example2020!@#
      port: 27017
      database: test
  autoconfigure:
  #    exclude: org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
  security:
    user:
      name: root
      password: example2020!@#
  activemq:
    broker-url: tcp://192.168.1.131:61616
    user: admin
    password: admin
    pool:
      enabled: false
      max-connections: 50
    packages:
      trust-all: true
  jms:
    pub-sub-domain: true
    template:
      default-destination: activemq.default.destination
  rabbitmq:
    host: 192.168.1.131
    port: 5672
    username: admin
    password: admin
    publisher-confirm-type: simple
  devtools:
    restart:
      enabled: true
  application:
    name: product
rabbitmq:
  queue:
    msg: spring-boot-queue-msg
    user: spring-boot-queue-user

logging:
  level:
    root: info
    org:
      sprintframework: warn
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
eureka:
  client:
    serviceUrl:
      defaultZone: http://192.168.1.130:7001/eureka/
